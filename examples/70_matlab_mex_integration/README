

This is a simple example that demonstrates the basic approach to embed a Matchlib SystemC design
into a Matlab Mex environment. For more information on Matlab Mex, see:

https://www.mathworks.com/help/matlab/cpp-mex-file-applications.html

The key issue is that SystemC is a multithreaded simulation environment that needs to preserve
the state of all threads in the design while running in a Matlab simulation.
However Matlab Mex expects to be able to call a single (non-blocking) C/C++ function that
will take input data and return output results immediately.

The approach demonstrated in this example shows how the SystemC sc_start and sc_pause functions
can be used to step the SystemC simulation so that it can be called from Matlab Mex.
In this example, the process_one_sample() function represents a simple non-blocking C
function that can be repeatedly called via Matlab Mex, and which looks like a normal
C++ function. In reality, each invocation of this function starts and then pauses the entire SC
simulation as needed to process an input data item and produce an output result, which is then
returned.


Steps:

3. Build the SystemC simulation executable by typing:
   make

4. Run the SC simulation by typing:
   ./sim_sc

5. View the waveforms generated from the SC simulation:
   ./vsim_vcd

6. Run Catapult HLS to generate Verilog RTL for DUT:
   catapult -f go_hls.tcl

7. Launch SCVerify / QuestaSim with generated RTL by typing in Catapult command line:
   dofile scverify.tcl

8. Run RTL Sim by typing in QuestaSim command line:
   run -all
   wave zoom full

9. View the RTL simulation waveforms and compare to SC waveforms before HLS synthesis

11. Delete all generated files
    make clean
